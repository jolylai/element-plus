@use 'sass:math';
@use 'sass:map';

@use '../mixins/function.scss' as *;

// Font
// 字体大小
$font-size: () !default;
$font-size: map.merge(
  (
    sm: 12px,
    base: 14px,
    lg: 16px,
  ),
  $font-size
);

$text-color: () !default;
$text-color: map.merge(
  (
    default: rgb(71 85 105),
    secondary: rgb(148 163 184),
    inverse: #fff,
    dark: #000,
    dark-secondary: rgb(30 41 59),
  ),
  $text-color
);

// Color
$colors: () !default;
$colors: map.deep-merge(
  (
    'white': #ffffff,
    'black': #000000,
    'primary': (
      'base': #1890ff,
    ),
    'success': (
      'base': #67c23a,
    ),
    'warning': (
      'base': #e6a23c,
    ),
    'danger': (
      'base': #f56c6c,
    ),
    'error': (
      'base': #f56c6c,
    ),
    'info': (
      'base': #909399,
    ),
  ),
  $colors
);

$color-white: map.get($colors, 'white') !default;
$color-black: map.get($colors, 'black') !default;
$color-primary: map.get($colors, 'primary', 'base') !default;
$color-success: map.get($colors, 'success', 'base') !default;
$color-warning: map.get($colors, 'warning', 'base') !default;
$color-danger: map.get($colors, 'danger', 'base') !default;
$color-error: map.get($colors, 'error', 'base') !default;
$color-info: map.get($colors, 'info', 'base') !default;

$types: primary, success, warning, danger, error, info;

// https://sass-lang.com/documentation/values/maps#immutability
// mix colors with white/black to generate light/dark level
@mixin set-color-mix-level(
  $type,
  $number,
  $mode: 'light',
  $mix-color: $color-white
) {
  $colors: map.deep-merge(
    (
      $type: (
        '#{$mode}-#{$number}':
          mix(
            $mix-color,
            map.get($colors, $type, 'base'),
            math.percentage(math.div($number, 10))
          ),
      ),
    ),
    $colors
  ) !global;
}

@each $type in $types {
  @for $i from 1 through 9 {
    @include set-color-mix-level($type, $i, 'light', $color-white);
  }
}

// Padding
$padding: () !default;
$padding: map.merge(
  (
    lg: 24px,
    md: 16px,
    sm: 12px,
    xs: 8px,
    xxs: 4px,
  ),
  $padding
);

// Margin
$margin: () !default;
$margin: map.merge(
  (
    lg: 24px,
    md: 16px,
    sm: 12px,
    xs: 8px,
    xxs: 4px,
  ),
  $margin
);

// Border
$border-color: () !default;
$border-color: map.merge(
  (
    '': #d9d9d9,
    'light': #e4e7ed,
    'lighter': #ebeef5,
    'extra-light': #f2f6fc,
    'dark': #d4d7de,
    'darker': #cdd0d6,
  ),
  $border-color
);

$border-width: 1px !default;
$border-style: solid !default;
$border-color-hover: getCssVar('text-color', 'disabled') !default;

$border-radius: () !default;
$border-radius: map.merge(
  (
    'small': 2px,
    'base': 4px,
    'round': 20px,
    'circle': 100%,
  ),
  $border-radius
);

// Button
$button: () !default;
$button: map.merge(
  (
    'font-weight': getCssVar('font-weight-primary'),
    'border-color': getCssVar('border-color'),
    'bg-color': getCssVar('color', 'primary'),
    'text-color': getCssVar('text-color', 'regular'),
    'disabled-text-color': getCssVar('disabled-text-color'),
    'disabled-bg-color': getCssVar('fill-color', 'blank'),
    'disabled-border-color': getCssVar('border-color-light'),
    'divide-border-color': rgba($color-white, 0.5),
    'hover-text-color': getCssVar('color-primary'),
    'hover-bg-color': getCssVar('color-primary', 'light-7'),
    'hover-border-color': getCssVar('color-primary'),
    'active-text-color': getCssVar('color-primary', 'light-7'),
    'active-border-color': getCssVar('color-primary', 'light-7'),
    'active-bg-color': getCssVar('button', 'hover-bg-color'),
    'outline-color': getCssVar('color-primary', 'light-5'),
    'hover-link-text-color': getCssVar('color-info'),
    'active-color': getCssVar('text-color', 'primary'),
  ),
  $button
);

$button-padding-vertical: () !default;
$button-padding-vertical: map.merge(
  (
    'large': 13px,
    'default': 9px,
    'small': 0px,
  ),
  $button-padding-vertical
);

$button-padding-horizontal: () !default;
$button-padding-horizontal: map.merge(
  (
    'large': 20px,
    'default': 16px,
    'small': 6px,
  ),
  $button-padding-horizontal
);

$button-font-size: () !default;
$button-font-size: map.merge(
  (
    'large': getCssVar('font-size', 'base'),
    'default': getCssVar('font-size', 'base'),
    'small': 12px,
  ),
  $button-font-size
);

// Avatar
$avatar-size: () !default;
$avatar-size: map.merge(
  (
    'large': 40px,
    'default': 32px,
    'small': 24px,
  ),
  $avatar-size
);
